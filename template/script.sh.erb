#!/usr/bin/env bash
# Load the required environment
setup_env () {
  module purge
  module load r/"<%= context.pom_r_versions %>" rstudio-server/"<%= context.pom_rstudio_versions %>"
}

setup_env
export WORKING_DIR="${PWD}"
#
# Start RStudio Server
#
# PAM auth helper used by RStudio
export RSTUDIO_AUTH="$WORKING_DIR/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="$WORKING_DIR/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="$WORKING_DIR/rsession.log"

  exec &>>"\${RSESSION_LOG_FILE}"
  set -x

  # rsession.sh doesn't share the same env as the outside script, so these
  # need to be set explicitly
  export TMPDIR="/tmp/$SLURM_JOB_USER/$SLURM_JOB_ID/"
  export TZ="America/Los_Angeles"
  export MODULEPATH_ROOT="$MODULEPATH_ROOT"
  export MODULEPATH="$MODULEPATH"

  env

  # Launch the original command
  echo "Launching rsession..."
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "$WORKING_DIR/rsession.sh"

# generate a temporary database.conf file
export RSTUDIO_DB_CONF_FILE="${PWD}/database.conf"
(
umask 077
sed 's/^ \{2\}//' > "${RSTUDIO_DB_CONF_FILE}" << EOL
  provider=sqlite
  # Directory in which the sqlite database will be written
  directory="/tmp/$SLURM_JOB_USER/$SLURM_JOB_ID/"
EOL
)
chmod 744 "${RSTUDIO_DB_CONF_FILE}"

# Set working directory to home directory
cd "${HOME}"

# Output debug info
module list
hostname

# server log directory in this job's working directory
mkdir -p "$WORKING_DIR/logs"

# use the system installed rserver
# export PATH="$PATH:/usr/lib/rstudio-server/bin"

set -x
# Launch the RStudio Server
echo "Starting up rserver... at $(date)"

rserver \
  --www-port "${port}" \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --rsession-path "${RSESSION_WRAPPER_FILE}" \
  --rsession-which-r=$(which R) \
  --database-config-file "${RSTUDIO_DB_CONF_FILE}" \
  --server-data-dir "${TMPDIR}" \
  --server-working-dir "${TMPDIR}" \
  --server-user=$(whoami)